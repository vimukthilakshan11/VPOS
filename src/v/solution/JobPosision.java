/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package v.solution;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import v.DB.DB;

/**
 *
 * @author Administrator
 */
public class JobPosision extends javax.swing.JPanel {

    /**
     * Creates new form JobPosision
     */
    DefaultTableModel dtm;
    ResultSet rs;

    public JobPosision() {
        initComponents();
        roleTable();
        labl_id.setVisible(false);
        txt_roleid.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txt_roleName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        labl_id = new javax.swing.JLabel();
        txt_roleid = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        check_sale = new javax.swing.JCheckBox();
        check_purchase = new javax.swing.JCheckBox();
        check_return = new javax.swing.JCheckBox();
        check_customer = new javax.swing.JCheckBox();
        check_purchaseorder = new javax.swing.JCheckBox();
        check_quate = new javax.swing.JCheckBox();
        check_product = new javax.swing.JCheckBox();
        check_userprofile = new javax.swing.JCheckBox();
        check_userposition = new javax.swing.JCheckBox();
        check_employee = new javax.swing.JCheckBox();
        check_report = new javax.swing.JCheckBox();
        check_invoice = new javax.swing.JCheckBox();
        check_extracost = new javax.swing.JCheckBox();
        check_extraincome = new javax.swing.JCheckBox();
        check_brand = new javax.swing.JCheckBox();
        check_cat = new javax.swing.JCheckBox();
        check_stock = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        btn_save = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        check_supplier = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_role = new javax.swing.JTable();

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/v/solution/image/skills.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(93, 167, 219));
        jPanel3.setForeground(new java.awt.Color(93, 167, 219));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 62)); // NOI18N
        jLabel1.setText("Job Role");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(833, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        txt_roleName.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        txt_roleName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel3.setText("Role Name");

        labl_id.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        labl_id.setText(" ID");

        txt_roleid.setEditable(false);
        txt_roleid.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        txt_roleid.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_roleName))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(labl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_roleid))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_roleName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_roleid, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labl_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        check_sale.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_sale.setText("Sale");
        check_sale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_saleActionPerformed(evt);
            }
        });

        check_purchase.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_purchase.setText("Purchase");

        check_return.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_return.setText("Return");

        check_customer.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_customer.setText("Customer");

        check_purchaseorder.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_purchaseorder.setText("Purchase Order");

        check_quate.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_quate.setText("Request For Quate");

        check_product.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_product.setText("Product");

        check_userprofile.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_userprofile.setText("User Profile");

        check_userposition.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_userposition.setText("User Position");

        check_employee.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_employee.setText("Employee");

        check_report.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_report.setText("Report");

        check_invoice.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_invoice.setText("Invoice");

        check_extracost.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_extracost.setText("Extra Cost");

        check_extraincome.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_extraincome.setText("Extra Income");

        check_brand.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_brand.setText("Brand");

        check_cat.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_cat.setText("Category");

        check_stock.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_stock.setText("Stockes");

        btn_save.setBackground(new java.awt.Color(93, 167, 219));
        btn_save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/v/solution/image/save.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_update.setBackground(new java.awt.Color(93, 167, 219));
        btn_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/v/solution/image/update.png"))); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_clear.setBackground(new java.awt.Color(93, 167, 219));
        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/v/solution/image/cleaning.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        check_supplier.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        check_supplier.setText("Supplier");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(check_employee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_userposition)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_userprofile))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(check_extraincome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_extracost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_invoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(check_report))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(check_stock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_cat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_supplier))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(check_quate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(check_purchaseorder))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(check_product)
                                .addGap(4, 4, 4)
                                .addComponent(check_sale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(check_purchase)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(check_brand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(check_customer)
                            .addComponent(check_return, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_sale)
                    .addComponent(check_purchase)
                    .addComponent(check_return)
                    .addComponent(check_brand)
                    .addComponent(check_product))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_quate)
                    .addComponent(check_purchaseorder)
                    .addComponent(check_customer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_employee)
                    .addComponent(check_userposition)
                    .addComponent(check_userprofile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_extraincome)
                    .addComponent(check_extracost)
                    .addComponent(check_invoice)
                    .addComponent(check_report))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_stock)
                    .addComponent(check_cat)
                    .addComponent(check_supplier))
                .addGap(27, 27, 27)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        table_role.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        table_role.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Role ID", "Role Name"
            }
        ));
        table_role.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table_role.setRowHeight(40);
        table_role.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_roleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_role);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void check_saleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_saleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_check_saleActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        try {
            boolean alreadyStatus = false;
            String query = "SELECT `PositionName`  FROM `employeeposition` WHERE PositionName = '" + txt_roleName.getText() + "'";
            rs = DB.search(query);
            if (rs.next()) {
                alreadyStatus = true;
            }

            if (alreadyStatus == false) {
                if (!txt_roleName.getText().equals("")) {

                    int sale = 0;
                    int purchase = 0;
                    int returna = 0;
                    int quate = 0;
                    int purchaseOrder = 0;
                    int customer = 0;
                    int supplier = 0;
                    int employee = 0;
                    int userposition = 0;
                    int userProfile = 0;
                    int product = 0;
                    int exincome = 0;
                    int excost = 0;
                    int invoice = 0;
                    int report = 0;
                    int stock = 0;
                    int category = 0;
                    int brand = 0;

                    if (check_sale.isSelected()) {
                        sale = 1;
                    }

                    if (check_purchase.isSelected()) {
                        purchase = 1;
                    }

                    if (check_return.isSelected()) {
                        returna = 1;
                    }

                    if (check_quate.isSelected()) {
                        quate = 1;
                    }

                    if (check_purchaseorder.isSelected()) {
                        purchaseOrder = 1;
                    }

                    if (check_customer.isSelected()) {
                        customer = 1;
                    }

                    if (check_supplier.isSelected()) {
                        supplier = 1;
                    }

                    if (check_employee.isSelected()) {
                        employee = 1;
                    }

                    if (check_userposition.isSelected()) {
                        userposition = 1;
                    }

                    if (check_userprofile.isSelected()) {
                        userProfile = 1;
                    }

                    if (check_product.isSelected()) {
                        product = 1;
                    }

                    if (check_extraincome.isSelected()) {
                        exincome = 1;
                    }

                    if (check_extracost.isSelected()) {
                        excost = 1;
                    }

                    if (check_invoice.isSelected()) {
                        invoice = 1;
                    }

                    if (check_report.isSelected()) {
                        report = 1;
                    }

                    if (check_stock.isSelected()) {
                        stock = 1;
                    }

                    if (check_cat.isSelected()) {
                        category = 1;
                    }

                    if (check_brand.isSelected()) {
                        brand = 1;
                    }

                    query = "INSERT INTO `employeeposition`(`PositionName`,"
                            + " `Sale`,"
                            + " `Purchase`,"
                            + " `Return`,"
                            + " `RequestForQuate`,"
                            + " `PurchaseOrder`,"
                            + " `Customer`, "
                            + "`Supplier`,"
                            + " `Employee`,"
                            + " `UserPosition`,"
                            + " `UserProfile`,"
                            + " `Product`,"
                            + " `ExIncome`,"
                            + " `ExCost`,"
                            + " `Invoice`,"
                            + " `Report`,"
                            + " `Stocks`,"
                            + " `Category`,"
                            + " `Brand`) VALUES ('" + txt_roleName.getText() + "',"
                            + "'" + sale + "',"
                            + "'" + purchase + "',"
                            + "'" + returna + "',"
                            + "'" + quate + "',"
                            + "'" + purchaseOrder + "',"
                            + "'" + customer + "',"
                            + "'" + supplier + "',"
                            + "'" + employee + "',"
                            + "'" + userposition + "',"
                            + "'" + userProfile + "',"
                            + "'" + product + "',"
                            + "'" + exincome + "',"
                            + "'" + excost + "',"
                            + "'" + invoice + "',"
                            + "'" + report + "',"
                            + "'" + stock + "',"
                            + "'" + category + "',"
                            + "'" + brand + "')";

                    DB.push(query);
                    JOptionPane.showMessageDialog(this, "successfully saved");
                    roleTable();
                    clear();
                    

                } else {
                    JOptionPane.showMessageDialog(this, "Please Enter Role Name");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Already Registerd This Name");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:

        try {
//            boolean alreadyStatus = false;
//            String query = "SELECT `Id`  FROM `employeeposition` WHERE Id = '" + txt_roleid.getText() + "'";
//            rs = DB.search(query);
//            if (rs.next()) {
//                alreadyStatus = true;
//            }

            if (!txt_roleName.getText().equals("")) {
                if (!txt_roleid.getText().equals("")) {

                    int sale = 0;
                    int purchase = 0;
                    int returna = 0;
                    int quate = 0;
                    int purchaseOrder = 0;
                    int customer = 0;
                    int supplier = 0;
                    int employee = 0;
                    int userposition = 0;
                    int userProfile = 0;
                    int product = 0;
                    int exincome = 0;
                    int excost = 0;
                    int invoice = 0;
                    int report = 0;
                    int stock = 0;
                    int category = 0;
                    int brand = 0;

                    if (check_sale.isSelected()) {
                        sale = 1;
                    }

                    if (check_purchase.isSelected()) {
                        purchase = 1;
                    }

                    if (check_return.isSelected()) {
                        returna = 1;
                    }

                    if (check_quate.isSelected()) {
                        quate = 1;
                    }

                    if (check_purchaseorder.isSelected()) {
                        purchaseOrder = 1;
                    }

                    if (check_customer.isSelected()) {
                        customer = 1;
                    }

                    if (check_supplier.isSelected()) {
                        supplier = 1;
                    }

                    if (check_employee.isSelected()) {
                        employee = 1;
                    }

                    if (check_userposition.isSelected()) {
                        userposition = 1;
                    }

                    if (check_userprofile.isSelected()) {
                        userProfile = 1;
                    }

                    if (check_product.isSelected()) {
                        product = 1;
                    }

                    if (check_extraincome.isSelected()) {
                        exincome = 1;
                    }

                    if (check_extracost.isSelected()) {
                        excost = 1;
                    }

                    if (check_invoice.isSelected()) {
                        invoice = 1;
                    }

                    if (check_report.isSelected()) {
                        report = 1;
                    }

                    if (check_stock.isSelected()) {
                        stock = 1;
                    }

                    if (check_cat.isSelected()) {
                        category = 1;
                    }

                    if (check_brand.isSelected()) {
                        brand = 1;
                    }

                    String query = "UPDATE `employeeposition` SET `PositionName`='" + txt_roleName.getText() + "',"
                            + "`Sale`='" + sale + "',"
                            + "`Purchase`='" + purchase + "',"
                            + "`Return`='" + returna + "',"
                            + "`RequestForQuate`='" + quate + "',"
                            + "`PurchaseOrder`='" + purchaseOrder + "',"
                            + "`Customer`='" + customer + "',"
                            + "`Supplier`='" + supplier + "',"
                            + "`Employee`='" + employee + "',"
                            + "`UserPosition`='" + userposition + "',"
                            + "`UserProfile`='" + userProfile + "',"
                            + "`Product`='" + product + "',"
                            + "`ExIncome`='" + exincome + "',"
                            + "`ExCost`='" + excost + "',"
                            + "`Invoice`='" + invoice + "',"
                            + "`Report`='" + report + "',"
                            + "`Stocks`='" + stock + "',"
                            + "`Category`='" + category + "',"
                            + "`Brand`='" + brand + "' "
                            + "WHERE Id = '" + txt_roleid.getText() + "'";

                    DB.push(query);
                    JOptionPane.showMessageDialog(this, "Updated Success");
                    clear();
                } else {
                    JOptionPane.showMessageDialog(this, "Please Click Role From Table");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please Enter Role Name");
            }
        } catch (Exception e) {

            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO aclear();
        clear();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void table_roleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_roleMouseClicked
        // TODO add your handling code here:

        clear();

        labl_id.setVisible(true);
        txt_roleid.setVisible(true);
        String id = "";
        int selectedRow = table_role.getSelectedRow();
        dtm = (DefaultTableModel) table_role.getModel();
        id = dtm.getValueAt(selectedRow, 0).toString();

        txt_roleid.setText(id);
        txt_roleName.setText(dtm.getValueAt(selectedRow, 1).toString());

        String sale = "0";
        String purchase = "0";
        String returna = "0";
        String quate = "0";
        String purchaseOrder = "0";
        String customer = "0";
        String supplier = "0";
        String employee = "0";
        String userposition = "0";
        String userProfile = "0";
        String product = "0";
        String exincome = "0";
        String excost = "0";
        String invoice = "0";
        String report = "0";
        String stock = "0";
        String category = "0";
        String brand = "0";

        try {
            String query = "SELECT `Sale`, `Purchase`, `Return`, `RequestForQuate`, `PurchaseOrder`, `Customer`, `Supplier`, `Employee`, `UserPosition`, `UserProfile`, `Product`, `ExIncome`, `ExCost`, `Invoice`, `Report`, `Stocks`, `Category`, `Brand` FROM `employeeposition` WHERE Id='" + id + "'";
            rs = DB.search(query);
            if (rs.next()) {
                sale = rs.getString("Sale");
                purchase = rs.getString("Purchase");
                returna = rs.getString("Return");
                quate = rs.getString("RequestForQuate");
                purchaseOrder = rs.getString("PurchaseOrder");
                customer = rs.getString("Customer");
                supplier = rs.getString("Supplier");
                employee = rs.getString("Employee");
                userposition = rs.getString("UserPosition");
                userProfile = rs.getString("UserProfile");
                product = rs.getString("Product");
                exincome = rs.getString("ExIncome");
                excost = rs.getString("ExCost");
                invoice = rs.getString("Invoice");
                report = rs.getString("Report");
                stock = rs.getString("Stocks");
                category = rs.getString("Category");
                brand = rs.getString("Brand");

                if (sale.equals("1")) {
                    check_sale.doClick();

                }

                if (purchase.equals("1")) {
                    check_purchase.doClick();
                }

                if (returna.equals("1")) {
                    check_return.doClick();
                }

                if (quate.equals("1")) {
                    check_quate.doClick();
                }

                if (purchaseOrder.equals("1")) {
                    check_purchaseorder.doClick();
                }

                if (customer.equals("1")) {
                    check_customer.doClick();
                }

                if (supplier.equals("1")) {
                    check_supplier.doClick();
                }

                if (employee.equals("1")) {
                    check_employee.doClick();
                }

                if (userposition.equals("1")) {
                    check_userposition.doClick();
                }

                if (userProfile.equals("1")) {
                    check_userprofile.doClick();
                }

                if (product.equals("1")) {
                    check_product.doClick();
                }

                if (exincome.equals("1")) {
                    check_extraincome.doClick();
                }

                if (excost.equals("1")) {
                    check_extracost.doClick();
                }

                if (invoice.equals("1")) {
                    check_invoice.doClick();
                }

                if (report.equals("1")) {
                    check_report.doClick();
                }

                if (category.equals("1")) {
                    check_cat.doClick();
                }

                if (brand.equals("1")) {
                    check_brand.doClick();
                }

                if (stock.equals("1")) {
                    check_stock.doClick();
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_table_roleMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_update;
    private javax.swing.JCheckBox check_brand;
    private javax.swing.JCheckBox check_cat;
    private javax.swing.JCheckBox check_customer;
    private javax.swing.JCheckBox check_employee;
    private javax.swing.JCheckBox check_extracost;
    private javax.swing.JCheckBox check_extraincome;
    private javax.swing.JCheckBox check_invoice;
    private javax.swing.JCheckBox check_product;
    private javax.swing.JCheckBox check_purchase;
    private javax.swing.JCheckBox check_purchaseorder;
    private javax.swing.JCheckBox check_quate;
    private javax.swing.JCheckBox check_report;
    private javax.swing.JCheckBox check_return;
    private javax.swing.JCheckBox check_sale;
    private javax.swing.JCheckBox check_stock;
    private javax.swing.JCheckBox check_supplier;
    private javax.swing.JCheckBox check_userposition;
    private javax.swing.JCheckBox check_userprofile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labl_id;
    private javax.swing.JTable table_role;
    private javax.swing.JTextField txt_roleName;
    private javax.swing.JTextField txt_roleid;
    // End of variables declaration//GEN-END:variables

    private void roleTable() {
        dtm = (DefaultTableModel) table_role.getModel();
        dtm.setRowCount(0);
        try {

            String query = "SELECT * FROM employeeposition WHERE status = '1'";
            ResultSet rs = DB.search(query);
            while (rs.next()) {

                Vector v = new Vector();
                String roleId = rs.getString("Id");
                String roleName = rs.getString("PositionName");

                v.add(roleId);
                v.add(roleName);

                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {

        txt_roleName.setText(null);
        labl_id.setVisible(false);
        txt_roleid.setVisible(false);

        if (check_sale.isSelected()) {
            check_sale.doClick();

        }

        if (check_purchase.isSelected()) {
            check_purchase.doClick();
        }

        if (check_return.isSelected()) {
            check_return.doClick();
        }

        if (check_quate.isSelected()) {
            check_quate.doClick();
        }

        if (check_purchaseorder.isSelected()) {
            check_purchaseorder.doClick();
        }

        if (check_customer.isSelected()) {
            check_customer.doClick();
        }

        if (check_supplier.isSelected()) {
            check_supplier.doClick();
        }

        if (check_employee.isSelected()) {
            check_employee.doClick();
        }

        if (check_userposition.isSelected()) {
            check_userposition.doClick();
        }

        if (check_userprofile.isSelected()) {
            check_userprofile.doClick();
        }

        if (check_product.isSelected()) {
            check_product.doClick();
        }

        if (check_extraincome.isSelected()) {
            check_extraincome.doClick();
        }

        if (check_extracost.isSelected()) {
            check_extracost.doClick();
        }

        if (check_invoice.isSelected()) {
            check_invoice.doClick();
        }

        if (check_report.isSelected()) {
            check_report.doClick();
        }

        if (check_cat.isSelected()) {
            check_cat.doClick();
        }

        if (check_brand.isSelected()) {
            check_brand.doClick();
        }

        if (check_stock.isSelected()) {
            check_stock.doClick();
        }

    }
}
